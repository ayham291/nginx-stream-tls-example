# nginx.conf - stream ssh proxy

events {
  worker_connections  1024;
}

http {
  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name _;

    ssl_certificate     /etc/nginx/ssl/waifu-server-chain.pem;
    ssl_certificate_key /etc/nginx/ssl/server-waifu-server.key;

    ssl_trusted_certificate /etc/nginx/ssl/client-waifu-client.crt;
    ssl_client_certificate /etc/nginx/ssl/ca/root-ca.crt;
    ssl_verify_client on;

    # Default 1 - In this case 3 because 2 Intermediate CAs
    ssl_verify_depth 3;

    error_page 495 496 /custom_ssl_error.html;

    location = /custom_ssl_error.html {
      add_header Content-Type text/html;
      return 403 "<!DOCTYPE html> <html> <head> <title>welcome waifu ssh proxy</title> </head> <body> <h1>who are you?</h1> </body> </html>";
      internal;  # Prevent direct access to this URL
    }

    # if the client certificate is not valid and no fingerprint is provided, return 403
    if ($ssl_client_verify != "SUCCESS") {
    }

    location / {
      # set header content-type html
      add_header Content-Type text/html;
      return 200 '<!DOCTYPE html> <html> <head> <title>welcome waifu ssh proxy</title> </head> <body> nginx ip: $server_addr <h1>waifu IT proxy</h1> my ip $remote_addr </body> </html>';
    }
    location /ot {
      # Rewrite the URL by stripping /ot and appending the rest of the URI, then stopping further processing of rewrite rules
      rewrite ^/ot(/.*)$ $1 break;

      # Proxy the modified request to the upstream server
      proxy_pass http://proxy-ot;

      # Set header content-type to HTML
      add_header Content-Type text/html;

      # pass the ssl client certificate to the upstream server
      proxy_ssl_certificate /etc/nginx/ssl/client-waifu-client.crt;
      proxy_ssl_certificate_key /etc/nginx/ssl/client-waifu-client.key;
      proxy_ssl_verify_depth 3;

      # Other necessary proxy settings can be added here
      # For example, setting headers that might be needed by the proxy-ot service
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
